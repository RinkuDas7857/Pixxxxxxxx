name: CI
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: yarn

      - run: yarn install --immutable --inline-builds
      - run: yarn build

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: yarn

      - run: yarn install --immutable --inline-builds
      - run: yarn build
      - run: yarn test
        env:
          CI: 'true'

  test-storybook:
    runs-on: ubuntu-latest
    env:
      CI: 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: yarn

      - run: yarn install --immutable --inline-builds

      - name: Install Playwgith
        run: npx playwright install --with-deps

      - name: Build Storybook
        run: |
          yarn build
          yarn storybook:build --quiet

      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on tcp:127.0.0.1:6006 && yarn test-storybook"

      - name: Check __diff_output__ existence
        id: check_diff_output_dir
        if: ${{ always() }}
        uses: andstor/file-existence-action@v1
        with:
          files: '__diff_output__/'

      - name: Archive image snapshot diffs
        uses: actions/upload-artifact@v4
        if: steps.check_diff_output_dir.outputs.files_exists == 'true' && ${{ always() }}
        with:
          name: upload_diff_output
          path: __diff_output__/

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: yarn

      - run: yarn install --immutable --inline-builds
      - run: yarn lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: yarn

      - run: yarn install --immutable --inline-builds
      - run: yarn build
      - run: yarn typecheck

  typecheck-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: yarn

      - run: yarn install --immutable --inline-builds
      - run: yarn typecheck:config
